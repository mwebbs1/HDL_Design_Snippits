// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "07/09/2022 19:43:24"

// 
// Device: Altera EPM240F100C4 Package FBGA100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Clk_Divider_Top (
	clk,
	pulse);
input 	clk;
output 	pulse;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("CLK_Divider_Quartus_v.sdo");
// synopsys translate_on

wire \clk~combout ;
wire \DIV|Equal1~0_combout ;
wire [2:0] \DIV|count ;


// Location: PIN_E1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y2_N9
maxii_lcell \DIV|count[1] (
// Equation(s):
// \DIV|count [1] = DFFEAS(((\DIV|count [0] $ (\DIV|count [1]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DIV|count [0]),
	.datad(\DIV|count [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\DIV|count [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \DIV|count[1] .lut_mask = "0ff0";
defparam \DIV|count[1] .operation_mode = "normal";
defparam \DIV|count[1] .output_mode = "reg_only";
defparam \DIV|count[1] .register_cascade_mode = "off";
defparam \DIV|count[1] .sum_lutc_input = "datac";
defparam \DIV|count[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N7
maxii_lcell \DIV|count[0] (
// Equation(s):
// \DIV|count [0] = DFFEAS(((!\DIV|count [0] & ((\DIV|count [1]) # (!\DIV|count [2])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\DIV|count [0]),
	.datac(\DIV|count [2]),
	.datad(\DIV|count [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\DIV|count [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \DIV|count[0] .lut_mask = "3303";
defparam \DIV|count[0] .operation_mode = "normal";
defparam \DIV|count[0] .output_mode = "reg_only";
defparam \DIV|count[0] .register_cascade_mode = "off";
defparam \DIV|count[0] .sum_lutc_input = "datac";
defparam \DIV|count[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N0
maxii_lcell \DIV|count[2] (
// Equation(s):
// \DIV|count [2] = DFFEAS(((\DIV|count [0] & (\DIV|count [2] $ (\DIV|count [1]))) # (!\DIV|count [0] & (\DIV|count [2] & \DIV|count [1]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\DIV|count [0]),
	.datac(\DIV|count [2]),
	.datad(\DIV|count [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\DIV|count [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \DIV|count[2] .lut_mask = "3cc0";
defparam \DIV|count[2] .operation_mode = "normal";
defparam \DIV|count[2] .output_mode = "reg_only";
defparam \DIV|count[2] .register_cascade_mode = "off";
defparam \DIV|count[2] .sum_lutc_input = "datac";
defparam \DIV|count[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N3
maxii_lcell \DIV|Equal1~0 (
// Equation(s):
// \DIV|Equal1~0_combout  = ((!\DIV|count [2] & (!\DIV|count [0] & !\DIV|count [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\DIV|count [2]),
	.datac(\DIV|count [0]),
	.datad(\DIV|count [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\DIV|Equal1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \DIV|Equal1~0 .lut_mask = "0003";
defparam \DIV|Equal1~0 .operation_mode = "normal";
defparam \DIV|Equal1~0 .output_mode = "comb_only";
defparam \DIV|Equal1~0 .register_cascade_mode = "off";
defparam \DIV|Equal1~0 .sum_lutc_input = "datac";
defparam \DIV|Equal1~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_F9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \pulse~I (
	.datain(\DIV|Equal1~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(pulse));
// synopsys translate_off
defparam \pulse~I .operation_mode = "output";
// synopsys translate_on

endmodule
